@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inherits LayoutComponentBase

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
            <a href="/registercustomer">Register Account</a>
            <AuthorizeView Roles="Administrator">
                <a href="/registerhigherprivelageuser">Register Higher Privelage User</a>
            </AuthorizeView>
            <AuthorizeView>
                <NotAuthorized>
                    <a href="/login">Login</a>
                </NotAuthorized>
                <Authorized>
                    <a href="/logout">Logout</a>
                </Authorized>
            </AuthorizeView>
            <div class="username-container">
                @userName
            </div>
            
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private string userName = "";

    protected override async Task OnInitializedAsync()
    {
        // Get the Authentication State
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        // Get the user
        var user = authState.User;

        // Check if the user is authenticated
        if (user.Identity?.IsAuthenticated ?? false)
        {
            // Extract the name claim
            var nameClaim = user.FindFirst(c => c.Type == System.Security.Claims.ClaimTypes.Name);
            if (nameClaim != null)
            {
                // Set the user name
                userName = nameClaim.Value;
            }
            else
            {
                // Handle cases where the name claim is missing
                userName = "Unknown User";
            }
        }
        else
        {
            // Default value for unauthenticated users
            userName = "Guest";
        }
    }
}