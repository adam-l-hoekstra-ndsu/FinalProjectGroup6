@page "/animalshelters/create"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using FinalProjectGroup6.Models
@inject IDbContextFactory<FinalProjectGroup6.Data.FinalProjectGroup6Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>AnimalShelter</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="AnimalShelter" OnValidSubmit="AddAnimalShelter" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="picture" class="form-label">Picture:</label> 
                <InputText id="picture" @bind-Value="AnimalShelter.Picture" class="form-control" /> 
                <ValidationMessage For="() => AnimalShelter.Picture" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="AnimalShelter.Name" class="form-control" /> 
                <ValidationMessage For="() => AnimalShelter.Name" class="text-danger" /> 
            </div>
            <div>
                <label for="addressSelect">Address:</label>
                <InputSelect id="addressSelect" @bind-Value="AnimalShelter.AddressId">
                    @foreach (var address in addresses)
                    {
                        <option value="@address.Id">@address.StreetAddress, @address.City, @address.State, @address.ZipCode</option>
                    }
                </InputSelect>
            </div>
            <div class="mb-3">
                <label for="openinghour" class="form-label">OpeningHour:</label> 
                <InputNumber id="openinghour" @bind-Value="AnimalShelter.OpeningHour" class="form-control" /> 
                <ValidationMessage For="() => AnimalShelter.OpeningHour" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="closinghour" class="form-label">ClosingHour:</label> 
                <InputNumber id="closinghour" @bind-Value="AnimalShelter.ClosingHour" class="form-control" /> 
                <ValidationMessage For="() => AnimalShelter.ClosingHour" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isactive" class="form-label">IsActive:</label> 
                <InputCheckbox id="isactive" @bind-Value="AnimalShelter.IsActive" class="form-check-input" /> 
                <ValidationMessage For="() => AnimalShelter.IsActive" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="phoneNumber" class="form-label">Phone Number:</label>
                <InputText id="phoneNumber" @bind-Value="AnimalShelter.PhoneNumber" class="form-control" />
                <ValidationMessage For="() => AnimalShelter.PhoneNumber" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="emailAddress" class="form-label">Email Address:</label>
                <InputText id="emailAdress" @bind-Value="AnimalShelter.EmailAddress" class="form-control" />
                <ValidationMessage For="() => AnimalShelter.EmailAddress" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/animalshelters/search">Back to List</a>
</div>

@code {
    private List<Address>? addresses;

    [SupplyParameterFromForm]
    private AnimalShelter AnimalShelter { get; set; } = new();

    protected override void OnInitialized()
    {
        using var context = DbFactory.CreateDbContext();
        addresses = context.Address.ToList();
    }

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddAnimalShelter()
    {
        using var context = DbFactory.CreateDbContext();
        context.AnimalShelter.Add(AnimalShelter);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/animalshelters/search");
    }
}
