@page "/animalshelters/profile"
@using Microsoft.EntityFrameworkCore
@using FinalProjectGroup6.Models
@using FinalProjectGroup6.Data
@using Microsoft.AspNetCore.Components.Authorization
@inject IDbContextFactory<FinalProjectGroup6.Data.FinalProjectGroup6Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Shelter Profile</PageTitle>

<h1>Shelter Profile</h1>

<div>
    <hr />
    @if (animalshelter is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
       <div class="shelterdogprofile-box">
            <img src="@animalshelter.Picture" alt="@animalshelter.Name" class="img-fluid" />
                <div class="shelterdogprofile-info">
                <table class="center">
                    <tr>
                        <th>Name</th>
                        <td>@animalshelter.Name</td>
                    </tr>
                    <tr>
                        <th>Address</th>
                        <td>@address.StreetAddress, @address.City, @address.State, @address.ZipCode</td>
                    </tr>
                    <tr>
                        <th>Opens</th>
                        <td>@FormatHour(animalshelter.OpeningHour)</td>
                    </tr>
                    <tr>
                        <th>Closes</th>
                        <td>@FormatHour(animalshelter.ClosingHour)</td>
                    </tr>
                    <tr>
                        <th>Phone Number</th>
                        <td>@FormatPhoneNumber()</td>
                    </tr>
                    <tr>
                        <th>Email Address</th>
                        <td>@animalshelter.EmailAddress</td>
                    </tr>
                </table>
                <div>
                <p></p>
                </div>
                    <div class="text-center">
                        <a href="@("/animalshelters/search")" class="btn btn-primary">Back to Search</a>
                        <a>     </a>
                        <a href="@("/error")" class="btn btn-primary">Contact</a>
                    </div>
                </div>
            </div>
        <div>
            <AuthorizeView Roles="Administrator, Shelter Employee">
                <a href="@($"/animalshelters/edit?id={animalshelter.Id}")">Edit</a>
            </AuthorizeView> 
        </div>
    }
</div>

@code {
    private AnimalShelter? animalshelter;
    private FinalProjectGroup6Context context = default!;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    private Address address;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        animalshelter = await context.AnimalShelter.FirstOrDefaultAsync(m => m.Id == Id);

        if (animalshelter is null)
        {
            NavigationManager.NavigateTo("notfound");
        }

        base.OnInitialized();
        address = context.Address.FirstOrDefault(a => a.Id == animalshelter.Id);
    }

    private string FormatHour(int hour)
    {
        if (hour - 12 > 0) return $"{hour - 12} PM";
        if (hour - 12 == 0) return $"{hour} PM";
        return $"{hour} AM";
    }

    private string FormatPhoneNumber()
    {
        try {
            var pn = animalshelter.PhoneNumber.ToCharArray();
            return $"{pn[0]}{pn[1]}{pn[2]}-{pn[3]}{pn[4]}{pn[5]}-{pn[6]}{pn[7]}{pn[8]}{pn[9]}";
        }
        catch (Exception e)
        {
            return "Invalid Phone Number";
        }
    }
}
