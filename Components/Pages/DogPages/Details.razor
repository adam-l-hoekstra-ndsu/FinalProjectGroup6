@page "/dogs/details"
@using Microsoft.EntityFrameworkCore
@using FinalProjectGroup6.Models
@inject IDbContextFactory<FinalProjectGroup6.Data.FinalProjectGroup6Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Dog</h2>
    <hr />
    @if (dog is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Picture</dt>
            <dd class="col-sm-10">@dog.Picture</dd>
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@dog.Status</dd>
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@dog.Name</dd>
            <dt class="col-sm-2">Gender</dt>
            <dd class="col-sm-10">@dog.Gender</dd>
            <dt class="col-sm-2">Breed</dt>
            <dd class="col-sm-10">@dog.Breed</dd>
            <dt class="col-sm-2">Age</dt>
            <dd class="col-sm-10">@dog.Age</dd>
            <dt class="col-sm-2">Color</dt>
            <dd class="col-sm-10">@dog.Color</dd>
            <dt class="col-sm-2">IsNeuteredSprayed</dt>
            <dd class="col-sm-10">@dog.IsNeuteredSpayed</dd>
            <dt class="col-sm-2">ShelterId</dt>
            <dd class="col-sm-10">@dog.ShelterId</dd>
            <dt class="col-sm-2">IsActive</dt>
            <dd class="col-sm-10">@dog.IsActive</dd>
        </dl>
        <div>
            <a href="@($"/dogs/edit?id={dog.Id}")">Edit</a> |
            <a href="@($"/dogs")">Back to List</a>
        </div>
    }
</div>

@code {
    private Dog? dog;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        dog = await context.Dog.FirstOrDefaultAsync(m => m.Id == Id);

        if (dog is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
